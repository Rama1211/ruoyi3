<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.baseInfo.DormRoomMapper.MisRoomMapper">

	<resultMap type="MisRoom" id="MisRoomResult">
		<id property="dormId" column="id"/>
		<result property="dormNum" column="dorm_num"/>
		<result property="dormType" column="dorm_type"/>
		<result property="dormShouldPeople" column="dorm_should_people"/>
		<result property="dormActualPeople" column="dorm_actual_people"/>
		<result property="floorId" column="floor_id"/>
		<result property="campusId" column="campus_id"/>
		<result property="floorLevel" column="floor_level"/>
		<result property="status" column="status"/>
		<result property="earlyCheckIn" column="early_checkIn"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
		<result property="createBy" column="create_by"/>
		<result property="updateBy" column="update_by"/>
	</resultMap>

	<resultMap type="MisFloor" id="MisFloorResult">
		<id property="floorId" column="id"/>
		<result property="floorName" column="floor_name"/>
		<result property="campusId" column="campus_id"/>
		<result property="floorLevel" column="floor_level"/>
		<result property="everyLevelNum" column="everyLevel_num"/>
		<result property="totalNum" column="total_num"/>
		<result property="createTime" column="createTime"/>
		<result property="updateTime" column="updateTime"/>
		<result property="createBy" column="createBy"/>
		<result property="updateBy" column="updateBy"/>
	</resultMap>
	
	<sql id="selectRoomVo">
        select *
		from mis_room
    </sql>
	
	<select id="selectRoomService" parameterType="MisRoom" resultMap="MisRoomResult">
	    <include refid="selectRoomVo"/>
		<where>
			<if test="campusId != null and campusId != ''">
				AND campus_id like concat('%', #{campusId}, '%')
			</if>
			<if test="floorId != null and floorId != ''">
				AND floor_id = #{floorId}
			</if>
		</where>
	</select>

	<select id="selectfloor" parameterType="String" resultMap="MisFloorResult">
		select *
		from mis_floor	where campus_id=#{campusId} ;
	</select>

	<select id="selectminNum" resultType="String">
		select min(dorm_num)
		from mis_room	where floor_id=#{floorId} and campus_id=#{campusId} and floor_level=#{floorLevel};
	</select>
	

	<select id="selectRoomById" parameterType="Long" resultMap="MisRoomResult">
		<include refid="selectRoomVo"/>
		where id = #{dormId}
	</select>


	<select id="selectRoomByFloorId" resultMap="MisRoomResult">
		<include refid="selectRoomVo"/>
		where floor_id = #{floorId} and floor_level=#{level}
	</select>


	<select id="checkDormmNumUnique"  resultMap="MisRoomResult">
		<include refid="selectRoomVo"/>
		 where dorm_num=#{dormNum} and floor_id=#{floorId} and campus_id=#{campusId}
	</select>



 	<delete id="deleteRoomByIds" parameterType="Long">
 		delete from mis_room where id in
 		<foreach collection="array" item="ids" open="(" separator="," close=")">
 			#{ids}
        </foreach>
 	</delete>

 	<update id="updateRoom" parameterType="MisRoom">
 		update mis_room
 		<set>
 			<if test="dormType != null and dormType != ''">dorm_type = #{dormType},</if>
 			dorm_should_people = #{dormShouldPeople},
 			dorm_actual_people = #{dormActualPeople},
 			status = #{status},
			early_checkIn=#{earlyCheckIn},
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			update_time = sysdate()
 		</set>
 		where id = #{dormId}
	</update>

	<update id="updateEarlyCheckIn" >
		update mis_room
		<set>
			early_checkIn = #{num},
		</set>
		where id = #{dormId}
	</update>


 	<insert id="insertRoom" parameterType="MisRoom" useGeneratedKeys="true" keyProperty="dormId">
		<selectKey resultType ="java.lang.Integer" keyProperty= "dormId"
				   order= "AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey >
 		insert into mis_room(
 			<if test="dormNum != null and dormNum != 0">dorm_num,</if>
 			<if test="dormType != null and dormType != ''">dorm_type,</if>
 			<if test="dormShouldPeople != null and dormShouldPeople != ''">dorm_should_people,</if>
 			<if test="dormActualPeople != null and dormActualPeople != ''">dorm_actual_people,</if>
 			<if test="floorId != null and floorId != ''">floor_id,</if>
 			<if test="campusId != null and campusId != ''">campus_id,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="updateBy != null and updateBy != ''">update_by,</if>
 			<if test="floorLevel != null and floorLevel != ''">floor_level,</if>
 			create_time,
			update_time
 		)values(
 			<if test="dormNum != null and dormNum != 0">#{dormNum},</if>
 			<if test="dormType != null and dormType != ''">#{dormType},</if>
 			<if test="dormShouldPeople != null and dormShouldPeople != ''">#{dormShouldPeople},</if>
 			<if test="dormActualPeople != null and dormActualPeople != ''">#{dormActualPeople},</if>
 			<if test="floorId != null and floorId != ''">#{floorId},</if>
 			<if test="campusId != null and campusId != ''">#{campusId},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="updateBy != null and updateBy != ''">#{updateBy},</if>
 			<if test="floorLevel != null and floorLevel != ''">#{floorLevel},</if>
 			sysdate(),
 			sysdate()
 		)
	</insert>

	<insert id ="insertRoomBatch" parameterType="java.util.List" >
		<selectKey resultType ="java.lang.Integer" keyProperty= "id"
				   order= "AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey >
		insert into mis_room
		(dorm_num, dorm_type, dorm_actual_people, dorm_should_people,floor_id,campus_id,floor_level,status,create_time,update_time,create_by,update_by)
		values
		<foreach collection ="list" item="roomList" index= "index" separator =",">
			(
			#{roomList.dormNum}, #{roomList.dormType},
			#{roomList.dormShouldPeople},
			#{roomList.dormActualPeople},
			#{roomList.floorId}, #{roomList.campusId},#{roomList.floorLevel},#{roomList.status},sysdate(),sysdate(),#{roomList.createBy},#{roomList.createBy}
			)
		</foreach >
	</insert >

</mapper> 